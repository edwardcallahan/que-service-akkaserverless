
// Generated by Akka gRPC. DO NOT EDIT.
package com.calncalncal

import akka.annotation.ApiMayChange


trait CounterService {
  
  
  def increase(in: com.calncalncal.IncreaseValue): scala.concurrent.Future[com.google.protobuf.empty.Empty]
  
  
  def decrease(in: com.calncalncal.DecreaseValue): scala.concurrent.Future[com.google.protobuf.empty.Empty]
  
  
  def reset(in: com.calncalncal.ResetValue): scala.concurrent.Future[com.google.protobuf.empty.Empty]
  
  
  def getCurrentCounter(in: com.calncalncal.GetCounter): scala.concurrent.Future[com.calncalncal.CurrentCounter]
  
}



object CounterService extends akka.grpc.ServiceDescription {
  val name = "com.calncalncal.CounterService"

  val descriptor: com.google.protobuf.Descriptors.FileDescriptor =
    com.calncalncal.CounterApiProto.javaDescriptor;

  object Serializers {
    import akka.grpc.scaladsl.ScalapbProtobufSerializer
    
    val IncreaseValueSerializer = new ScalapbProtobufSerializer(com.calncalncal.IncreaseValue.messageCompanion)
    
    val DecreaseValueSerializer = new ScalapbProtobufSerializer(com.calncalncal.DecreaseValue.messageCompanion)
    
    val ResetValueSerializer = new ScalapbProtobufSerializer(com.calncalncal.ResetValue.messageCompanion)
    
    val GetCounterSerializer = new ScalapbProtobufSerializer(com.calncalncal.GetCounter.messageCompanion)
    
    val EmptySerializer = new ScalapbProtobufSerializer(com.google.protobuf.empty.Empty.messageCompanion)
    
    val CurrentCounterSerializer = new ScalapbProtobufSerializer(com.calncalncal.CurrentCounter.messageCompanion)
    
  }

  @ApiMayChange
  object MethodDescriptors {
    import akka.grpc.internal.Marshaller
    import io.grpc.MethodDescriptor
    import Serializers._

    
    val increaseDescriptor: MethodDescriptor[com.calncalncal.IncreaseValue, com.google.protobuf.empty.Empty] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("com.calncalncal.CounterService", "Increase"))
        .setRequestMarshaller(new Marshaller(IncreaseValueSerializer))
        .setResponseMarshaller(new Marshaller(EmptySerializer))
        .setSampledToLocalTracing(true)
        .build()
    
    val decreaseDescriptor: MethodDescriptor[com.calncalncal.DecreaseValue, com.google.protobuf.empty.Empty] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("com.calncalncal.CounterService", "Decrease"))
        .setRequestMarshaller(new Marshaller(DecreaseValueSerializer))
        .setResponseMarshaller(new Marshaller(EmptySerializer))
        .setSampledToLocalTracing(true)
        .build()
    
    val resetDescriptor: MethodDescriptor[com.calncalncal.ResetValue, com.google.protobuf.empty.Empty] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("com.calncalncal.CounterService", "Reset"))
        .setRequestMarshaller(new Marshaller(ResetValueSerializer))
        .setResponseMarshaller(new Marshaller(EmptySerializer))
        .setSampledToLocalTracing(true)
        .build()
    
    val getCurrentCounterDescriptor: MethodDescriptor[com.calncalncal.GetCounter, com.calncalncal.CurrentCounter] =
      MethodDescriptor.newBuilder()
        .setType(
   MethodDescriptor.MethodType.UNARY 
  
  
  
)
        .setFullMethodName(MethodDescriptor.generateFullMethodName("com.calncalncal.CounterService", "GetCurrentCounter"))
        .setRequestMarshaller(new Marshaller(GetCounterSerializer))
        .setResponseMarshaller(new Marshaller(CurrentCounterSerializer))
        .setSampledToLocalTracing(true)
        .build()
    
  }
}
